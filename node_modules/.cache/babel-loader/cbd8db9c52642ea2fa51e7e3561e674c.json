{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\react1\\\\foodmenu\\\\src\\\\components\\\\Context.js\";\nimport React, { Component } from 'react';\nimport foods from './utils/foods';\nexport const DataContext = /*#__PURE__*/React.createContext();\nexport class DataProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [...foods],\n      cart: [],\n      total: 0\n    };\n\n    this.addCart = id => {\n      const {\n        products,\n        cart\n      } = this.state;\n      const check = cart.every(item => {\n        return item._id !== id;\n      });\n\n      if (check) {\n        const data = products.filter(product => {\n          return product._id === id;\n        });\n        alert(\"added\");\n        this.setState({\n          cart: [...cart, ...data]\n        });\n      }\n    };\n\n    this.reduction = id => {\n      const {\n        products\n      } = this.state;\n      console.log(products);\n      products.forEach(product => {\n        if (product._id === id) {\n          console.log(product);\n          product.count === 1 ? product.count = 1 : product.count -= 1;\n        }\n      });\n      this.setState({\n        products: products\n      });\n      this.getTotal();\n    };\n\n    this.increase = id => {\n      const {\n        products\n      } = this.state;\n      products.forEach(product => {\n        if (product._id === id) {\n          product.count += 1;\n        }\n      });\n      this.setState({\n        products: products\n      });\n      this.getTotal();\n    };\n\n    this.removeProduct = id => {\n      // if(window.confirm(\"Do you want to delete this product?\")){\n      const {\n        cart\n      } = this.state;\n      cart.forEach((item, index) => {\n        if (item._id === id) {\n          cart.splice(index, 1);\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.getTotal = () => {\n      const {\n        cart\n      } = this.state;\n      const res = cart.reduce((prev, item) => {\n        return prev + item.price * item.count;\n      }, 0);\n      this.setState({\n        total: res\n      });\n    };\n\n    this.selectCategoryHandler = cat => {\n      const itemsSelected = foods.filter(food => food.category === cat);\n      console.log(cat);\n      console.log(itemsSelected);\n      this.setState({\n        products: itemsSelected\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('dataCart', JSON.stringify(this.state.cart));\n    localStorage.setItem('dataTotal', JSON.stringify(this.state.total));\n  }\n\n  componentDidMount() {\n    const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n\n    if (dataCart !== null) {\n      this.setState({\n        cart: dataCart\n      });\n    }\n\n    const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n\n    if (dataTotal !== null) {\n      this.setState({\n        total: dataTotal\n      });\n    }\n  }\n\n  render() {\n    const {\n      products,\n      cart,\n      total\n    } = this.state;\n    const {\n      addCart,\n      reduction,\n      increase,\n      removeProduct,\n      getTotal\n    } = this;\n    return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: {\n        products,\n        addCart,\n        cart,\n        reduction,\n        increase,\n        removeProduct,\n        total,\n        getTotal\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/react1/foodmenu/src/components/Context.js"],"names":["React","Component","foods","DataContext","createContext","DataProvider","state","products","cart","total","addCart","id","check","every","item","_id","data","filter","product","alert","setState","reduction","console","log","forEach","count","getTotal","increase","removeProduct","index","splice","res","reduce","prev","price","selectCategoryHandler","cat","itemsSelected","food","category","componentDidUpdate","localStorage","setItem","JSON","stringify","componentDidMount","dataCart","parse","getItem","dataTotal","render","props","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport foods from './utils/foods';\n\n\nexport const DataContext = React.createContext();\n\nexport class DataProvider extends Component {\n\n    state = {\n        products: [\n           ...foods\n        ],\n        cart: [],\n        total: 0\n        \n    };\n\n    addCart = (id) =>{\n        const {products, cart} = this.state;\n        const check = cart.every(item =>{\n            return item._id !== id\n            \n        })\n        if(check){\n            const data = products.filter(product =>{\n                return product._id === id\n              \n            })\n            alert(\"added\")\n            this.setState({cart: [...cart,...data]})\n           \n        }\n        \n    };\n\n    reduction = id =>{\n        const { products } = this.state;\n        console.log(products)\n        products.forEach(product =>{\n            if(product._id === id){\n                console.log(product)\n                product.count === 1 ? product.count = 1 : product.count -=1;\n              \n            }\n        })\n        this.setState({products: products});\n        this.getTotal();\n    };\n\n    increase = id =>{\n        const { products } = this.state;\n        \n        products.forEach(product =>{\n            if(product._id === id){\n                product.count += 1;\n            }\n        })\n        \n        this.setState({products: products});\n        this.getTotal();\n    };\n\n    removeProduct = id =>{\n        // if(window.confirm(\"Do you want to delete this product?\")){\n            const {cart} = this.state;\n            cart.forEach((item, index) =>{\n                if(item._id === id){\n                    cart.splice(index, 1)\n                }\n            })\n            this.setState({cart: cart});\n            this.getTotal();\n        \n       \n    };\n\n    getTotal = ()=>{\n        const{cart} = this.state;\n        const res = cart.reduce((prev, item) => {\n            return prev + (item.price * item.count);\n        },0)\n        this.setState({total: res})\n    };\n\n    selectCategoryHandler = (cat) => {\n        const itemsSelected = foods.filter(food => food.category === cat);\n        console.log(cat);\n        console.log(itemsSelected);\n        this.setState({\n            products: itemsSelected\n        })\n    };\n    \n    componentDidUpdate(){\n        localStorage.setItem('dataCart', JSON.stringify(this.state.cart))\n        localStorage.setItem('dataTotal', JSON.stringify(this.state.total))\n    };\n\n    componentDidMount(){\n        const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n        if(dataCart !== null){\n            this.setState({cart: dataCart});\n        }\n        const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n        if(dataTotal !== null){\n            this.setState({total: dataTotal});\n        }\n    }\n   \n\n    render() {\n        const {products, cart,total} = this.state;\n        const {addCart,reduction,increase,removeProduct,getTotal} = this;\n        return (\n            <DataContext.Provider \n            value={{products, addCart, cart, reduction,increase,removeProduct,total,getTotal}}>\n                {this.props.children}\n            </DataContext.Provider>\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}